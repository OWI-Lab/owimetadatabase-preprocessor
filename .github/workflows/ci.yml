name: CI for Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# permissions:
#   contents: read
#   pages: write
#   id-token: write

jobs:  
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: snok/install-poetry@v1
      with:
        version: 1.7.0
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies
      run: |
        poetry install --all-extras
      #  python -m pip install --upgrade pip
      #  python -m pip install -e ./[dev]
    # - name: Type checking with mypy
    #   run: | #  poetry run mypy --install-types --non-interactive
    #     poetry run mypy ./src ./tests
    - name: Lint with flake8
      run: |
        poetry run flake8 ./src ./tests --count --max-line-length=127 --show-source --statistics
      #  poetry run flake8 ./src ./tests --count --select=E9,F63,F7,F82 --show-source --statistics
      #  poetry run flake8 ./src ./tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Format with black and isort
    #   run: |
    #     poetry run isort ./src ./tests
    #     poetry run black ./src ./tests
    - name: Test with pytest
      run: |
        poetry run pytest ./tests
        poetry run pytest --cov=./tests

  # build-deploy-docs:    
  #   needs: build
  #   uses: ./.github/workflows/docs.yml

  # deploy-package:  
  #   needs: [build, build-deploy-docs]
  #   uses: ./.github/workflows/publish.yml
  #   secrets: inherit
